"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/manual-analysis/page",{

/***/ "(app-pages-browser)/./src/components/workflow/utils.ts":
/*!******************************************!*\
  !*** ./src/components/workflow/utils.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateMatchedCount: function() { return /* binding */ calculateMatchedCount; },\n/* harmony export */   calculateMatchedCountAsync: function() { return /* binding */ calculateMatchedCountAsync; },\n/* harmony export */   createSteps: function() { return /* binding */ createSteps; },\n/* harmony export */   getStepStatus: function() { return /* binding */ getStepStatus; },\n/* harmony export */   updateDataFlowStats: function() { return /* binding */ updateDataFlowStats; }\n/* harmony export */ });\n// 步骤配置\nconst createSteps = ()=>[\n        {\n            id: \"initiate\",\n            title: \"发起计划\",\n            description: \"配置任务或选择智能分析\",\n            icon: \"\\uD83D\\uDCCB\",\n            status: \"active\"\n        },\n        {\n            id: \"analyze\",\n            title: \"分析数据\",\n            description: \"AI智能分析客户数据\",\n            icon: \"\\uD83D\\uDD0D\",\n            status: \"pending\"\n        },\n        {\n            id: \"call\",\n            title: \"智能外呼\",\n            description: \"机器人自动拨打电话\",\n            icon: \"\\uD83D\\uDCDE\",\n            status: \"pending\"\n        },\n        {\n            id: \"report\",\n            title: \"数据分析\",\n            description: \"分析外呼结果和效果\",\n            icon: \"\\uD83D\\uDCCA\",\n            status: \"pending\"\n        }\n    ];\n// 获取当前步骤状态\nconst getStepStatus = (stepId, currentStep, steps)=>{\n    const stepIndex = steps.findIndex((s)=>s.id === stepId);\n    const currentIndex = steps.findIndex((s)=>s.id === currentStep);\n    if (stepId === currentStep) return \"active\";\n    if (stepIndex < currentIndex) return \"completed\";\n    return \"pending\";\n};\n// 计算匹配的线索数量\nconst calculateMatchedCount = (conditions)=>{\n    if (conditions.length === 0) return 1250; // 默认总线索数\n    let baseCount = 1250;\n    let multiplier = 1;\n    conditions.forEach((condition)=>{\n        // 根据不同的筛选条件调整数量\n        switch(condition.id){\n            case \"followTime\":\n                multiplier *= 0.6; // 时间筛选通常减少60%的数据\n                break;\n            case \"nextFollowTime\":\n                multiplier *= 0.4; // 下次跟进时间筛选更严格\n                break;\n            case \"customerLevel\":\n                multiplier *= 0.7; // 客户等级筛选\n                break;\n            case \"source\":\n                multiplier *= 0.8; // 来源筛选\n                break;\n            case \"keywords\":\n                multiplier *= 0.5; // 关键词筛选\n                break;\n        }\n    });\n    return Math.floor(baseCount * multiplier);\n};\n// 异步计算匹配的线索数量（调用真实API）\nconst calculateMatchedCountAsync = async (conditions)=>{\n    try {\n        // 构建API请求参数\n        const requestParams = {\n            page: 1,\n            page_size: 1 // 只需要获取总数，不需要实际数据\n        };\n        // 处理筛选条件\n        conditions.forEach((condition)=>{\n            if (condition.type === \"multiSelect\") {\n                const values = Array.isArray(condition.value) ? condition.value : [];\n                const customValue = condition.customValue || \"\";\n                if (values.length > 0 || customValue.trim() !== \"\") {\n                    switch(condition.id){\n                        case \"followTime\":\n                            // 处理最近跟进时间\n                            if (customValue.trim()) {\n                                const customDate = new Date(customValue);\n                                const today = new Date();\n                                const diffDays = Math.floor((today.getTime() - customDate.getTime()) / (1000 * 60 * 60 * 24));\n                                if (diffDays <= 7) {\n                                    requestParams.last_follow_time_start = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                } else if (diffDays <= 15) {\n                                    requestParams.last_follow_time_start = new Date(today.getTime() - 15 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                } else if (diffDays <= 30) {\n                                    requestParams.last_follow_time_start = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                } else if (diffDays <= 60) {\n                                    requestParams.last_follow_time_start = new Date(today.getTime() - 60 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                } else if (diffDays <= 90) {\n                                    requestParams.last_follow_time_start = new Date(today.getTime() - 90 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                }\n                            } else if (values.length > 0) {\n                                const today = new Date();\n                                values.forEach((value)=>{\n                                    if (value === \"7天内\") {\n                                        requestParams.last_follow_time_start = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                    } else if (value === \"15天内\") {\n                                        requestParams.last_follow_time_start = new Date(today.getTime() - 15 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                    } else if (value === \"30天内\") {\n                                        requestParams.last_follow_time_start = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                    } else if (value === \"60天内\") {\n                                        requestParams.last_follow_time_start = new Date(today.getTime() - 60 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                    } else if (value === \"90天内\") {\n                                        requestParams.last_follow_time_start = new Date(today.getTime() - 90 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                    }\n                                });\n                            }\n                            break;\n                        case \"nextFollowTime\":\n                            // 处理下次跟进时间\n                            if (customValue.trim()) {\n                                const customDate = new Date(customValue);\n                                const today = new Date();\n                                const diffDays = Math.floor((customDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));\n                                if (diffDays >= 0 && diffDays <= 1) {\n                                    requestParams.next_follow_time_start = today.toISOString().split(\"T\")[0];\n                                    requestParams.next_follow_time_end = new Date(today.getTime() + 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                } else if (diffDays >= 0 && diffDays <= 7) {\n                                    requestParams.next_follow_time_start = today.toISOString().split(\"T\")[0];\n                                    requestParams.next_follow_time_end = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0];\n                                }\n                            } else if (values.length > 0) {\n                                const today = new Date();\n                                values.forEach((value)=>{\n                                    if (value === \"今天\") {\n                                        requestParams.next_follow_time_start = today.toISOString().split(\"T\")[0];\n                                        requestParams.next_follow_time_end = today.toISOString().split(\"T\")[0];\n                                    } else if (value === \"明天\") {\n                                        const tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);\n                                        requestParams.next_follow_time_start = tomorrow.toISOString().split(\"T\")[0];\n                                        requestParams.next_follow_time_end = tomorrow.toISOString().split(\"T\")[0];\n                                    } else if (value === \"本周\") {\n                                        const weekStart = new Date(today.getTime() - today.getDay() * 24 * 60 * 60 * 1000);\n                                        const weekEnd = new Date(weekStart.getTime() + 6 * 24 * 60 * 60 * 1000);\n                                        requestParams.next_follow_time_start = weekStart.toISOString().split(\"T\")[0];\n                                        requestParams.next_follow_time_end = weekEnd.toISOString().split(\"T\")[0];\n                                    } else if (value === \"下周\") {\n                                        const nextWeekStart = new Date(today.getTime() + (7 - today.getDay()) * 24 * 60 * 60 * 1000);\n                                        const nextWeekEnd = new Date(nextWeekStart.getTime() + 6 * 24 * 60 * 60 * 1000);\n                                        requestParams.next_follow_time_start = nextWeekStart.toISOString().split(\"T\")[0];\n                                        requestParams.next_follow_time_end = nextWeekEnd.toISOString().split(\"T\")[0];\n                                    } else if (value === \"本月\") {\n                                        const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);\n                                        const monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);\n                                        requestParams.next_follow_time_start = monthStart.toISOString().split(\"T\")[0];\n                                        requestParams.next_follow_time_end = monthEnd.toISOString().split(\"T\")[0];\n                                    }\n                                });\n                            }\n                            break;\n                        case \"customerLevel\":\n                            // 处理客户等级\n                            if (values.length > 0) {\n                                const levelMap = {\n                                    \"H级\": 1,\n                                    \"A级\": 2,\n                                    \"B级\": 3,\n                                    \"C级\": 4,\n                                    \"N级\": 5,\n                                    \"O级\": 6,\n                                    \"F级\": 7\n                                };\n                                const levelValues = values.map((v)=>levelMap[v]).filter((v)=>v !== undefined);\n                                if (levelValues.length > 0) {\n                                    requestParams.client_level = levelValues;\n                                }\n                            }\n                            break;\n                        case \"source\":\n                            // 处理线索来源\n                            if (values.length > 0) {\n                                requestParams.product = values.join(\" \");\n                            }\n                            break;\n                    }\n                }\n            } else if (condition.value && condition.value !== \"\") {\n                // 关键词筛选\n                requestParams.phone = condition.value;\n            }\n        });\n        // 调用API\n        const token = localStorage.getItem(\"access_token\");\n        if (!token) {\n            // 如果没有令牌，直接使用虚拟计算\n            console.log(\"未找到访问令牌，使用虚拟计算\");\n            return calculateMatchedCount(conditions);\n        }\n        const response = await fetch(\"http://localhost:8000/api/leads/query_with_latest_follow\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"access-token\": token\n            },\n            body: JSON.stringify(requestParams)\n        });\n        if (!response.ok) {\n            throw new Error(\"API请求失败: \".concat(response.status));\n        }\n        const result = await response.json();\n        if (result.status === \"success\") {\n            var _result_data_pagination, _result_data;\n            return ((_result_data = result.data) === null || _result_data === void 0 ? void 0 : (_result_data_pagination = _result_data.pagination) === null || _result_data_pagination === void 0 ? void 0 : _result_data_pagination.total_count) || 0;\n        } else {\n            throw new Error(result.message || \"查询失败\");\n        }\n    } catch (error) {\n        console.error(\"查询线索失败:\", error);\n        // 如果API调用失败，回退到虚拟计算\n        return calculateMatchedCount(conditions);\n    }\n};\n// 更新数据流统计\nconst updateDataFlowStats = (currentStep)=>{\n    switch(currentStep){\n        case \"initiate\":\n            return {\n                pendingLeads: 0,\n                processingTasks: 0,\n                completedToday: 0\n            };\n        case \"analyze\":\n            return {\n                pendingLeads: Math.floor(35 + Math.random() * 10),\n                processingTasks: 0,\n                completedToday: 0\n            };\n        case \"call\":\n            return {\n                pendingLeads: Math.floor(20 + Math.random() * 5),\n                processingTasks: Math.floor(8 + Math.random() * 8),\n                completedToday: Math.floor(15 + Math.random() * 10)\n            };\n        case \"report\":\n            return {\n                pendingLeads: Math.floor(5 + Math.random() * 3),\n                processingTasks: Math.floor(3 + Math.random() * 5),\n                completedToday: Math.floor(25 + Math.random() * 15)\n            };\n        default:\n            return {\n                pendingLeads: 0,\n                processingTasks: 0,\n                completedToday: 0\n            };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/workflow/utils.ts\n"));

/***/ })

});
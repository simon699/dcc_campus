"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   leadsAPI: function() { return /* binding */ leadsAPI; },\n/* harmony export */   tasksAPI: function() { return /* binding */ tasksAPI; }\n/* harmony export */ });\n// API服务文件\nconst API_BASE_URL = \"http://localhost:8000/api\";\n// 获取访问令牌\nconst getAuthToken = ()=>{\n    return localStorage.getItem(\"access_token\");\n};\n// 通用API请求函数\nconst apiRequest = async function(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const token = getAuthToken();\n    const defaultHeaders = {\n        \"Content-Type\": \"application/json\",\n        ...token && {\n            \"access-token\": token\n        }\n    };\n    const config = {\n        ...options,\n        headers: {\n            ...defaultHeaders,\n            ...options.headers\n        }\n    };\n    const response = await fetch(\"\".concat(API_BASE_URL).concat(endpoint), config);\n    if (!response.ok) {\n        throw new Error(\"API请求失败: \".concat(response.status));\n    }\n    return response.json();\n};\n// 线索相关API\nconst leadsAPI = {\n    // 获取线索统计信息\n    getStatistics: async (filterBy)=>{\n        return apiRequest(\"/leads/statistics?filter_by=\".concat(filterBy));\n    },\n    // 根据筛选条件获取线索统计信息\n    getFilteredStatistics: async (filters, filterBy)=>{\n        return apiRequest(\"/leads/statistics/filtered?filter_by=\".concat(filterBy), {\n            method: \"POST\",\n            body: JSON.stringify(filters)\n        });\n    },\n    // 获取叠加筛选条件的统计信息\n    getFilteredCount: async (filters, filterBy)=>{\n        const params = new URLSearchParams();\n        // 只有当filterBy有值时才添加筛选维度参数\n        if (filterBy) {\n            params.append(\"filter_by\", filterBy);\n        }\n        // 添加筛选参数\n        if (filters.leads_product) params.append(\"leads_product\", filters.leads_product);\n        if (filters.leads_type) params.append(\"leads_type\", filters.leads_type);\n        if (filters.first_follow_start) params.append(\"first_follow_start\", filters.first_follow_start);\n        if (filters.first_follow_end) params.append(\"first_follow_end\", filters.first_follow_end);\n        if (filters.latest_follow_start) params.append(\"latest_follow_start\", filters.latest_follow_start);\n        if (filters.latest_follow_end) params.append(\"latest_follow_end\", filters.latest_follow_end);\n        if (filters.next_follow_start) params.append(\"next_follow_start\", filters.next_follow_start);\n        if (filters.next_follow_end) params.append(\"next_follow_end\", filters.next_follow_end);\n        if (filters.first_arrive_start) params.append(\"first_arrive_start\", filters.first_arrive_start);\n        if (filters.first_arrive_end) params.append(\"first_arrive_end\", filters.first_arrive_end);\n        if (filters.is_arrive !== undefined) params.append(\"is_arrive\", filters.is_arrive.toString());\n        return apiRequest(\"/leads/statistics?\".concat(params.toString()));\n    }\n};\n// 任务相关API\nconst tasksAPI = {\n    // 获取外呼任务列表\n    getCallTasksList: async ()=>{\n        return apiRequest(\"/call-tasks/list\");\n    },\n    // 获取任务详情\n    getCallTaskDetails: async (taskId)=>{\n        return apiRequest(\"/call-tasks/list?task_id=\".concat(taskId));\n    },\n    // 创建外呼任务\n    createCallTask: async (taskData)=>{\n        return apiRequest(\"/call-tasks/create\", {\n            method: \"POST\",\n            body: JSON.stringify(taskData)\n        });\n    },\n    // 创建任务（保留原有接口）\n    createTask: async (taskData)=>{\n        return apiRequest(\"/tasks/create\", {\n            method: \"POST\",\n            body: JSON.stringify(taskData)\n        });\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    leadsAPI,\n    tasksAPI\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ })

});
"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[855],{3081:function(t,e,s){s.d(e,{CT:function(){return a}});let o={API_BASE_URL:s(257).env.NEXT_PUBLIC_API_BASE_URL||"https://your-production-domain.com/api",NODE_ENV:"production"},a=o.API_BASE_URL;o.NODE_ENV,o.NODE_ENV,o.NODE_ENV},9855:function(t,e,s){s.d(e,{AuthProvider:function(){return k},a:function(){return _}});var o=s(7437),a=s(2265),n=s(9376),i=s(8223),r=s(7342);class c{setupEventListeners(){["mousedown","mousemove","keypress","scroll","touchstart","click"].forEach(t=>{document.addEventListener(t,()=>this.handleUserActivity(),{passive:!0})}),document.addEventListener("visibilitychange",()=>this.handleVisibilityChange())}handleUserActivity(){this.lastActivityTime=Date.now()}handleVisibilityChange(){"visible"===document.visibilityState&&Date.now()-this.lastActivityTime>this.INACTIVITY_TIMEOUT&&this.checkTokenValidity()}startMonitoring(){this.isMonitoring=!0,this.scheduleNextCheck()}scheduleNextCheck(){this.timeoutId&&clearTimeout(this.timeoutId),this.timeoutId=setTimeout(()=>{this.checkInactivity()},this.CHECK_INTERVAL)}checkInactivity(){Date.now()-this.lastActivityTime>this.INACTIVITY_TIMEOUT?this.checkTokenValidity():this.scheduleNextCheck()}async checkTokenValidity(){let t=Date.now();if(t-this.lastTokenCheck<this.TOKEN_CHECK_COOLDOWN){console.log("活动监听器：Token检查在冷却期内，跳过"),this.scheduleNextCheck();return}try{if(console.log("活动监听器：检查token有效性..."),this.lastTokenCheck=t,!await (0,i.sT)()){console.log("活动监听器：Token无效，处理token失效"),this.handleTokenExpired();return}console.log("活动监听器：Token有效，继续监控"),this.scheduleNextCheck()}catch(t){console.error("活动监听器：Token验证失败:",t),this.handleTokenExpired()}}handleTokenExpired(){console.log("活动监听器：Token已失效，正在跳转到登录页面..."),this.stopMonitoring(),(0,r.Ee)()}stopMonitoring(){console.log("活动监听器：停止监控"),this.isMonitoring=!1,this.timeoutId&&(clearTimeout(this.timeoutId),this.timeoutId=null)}resetActivity(){this.lastActivityTime=Date.now()}start(){console.log("活动监听器：开始监控"),this.lastActivityTime=Date.now(),this.startMonitoring()}constructor(){this.timeoutId=null,this.lastActivityTime=Date.now(),this.isMonitoring=!1,this.INACTIVITY_TIMEOUT=18e5,this.CHECK_INTERVAL=6e5,this.lastTokenCheck=0,this.TOKEN_CHECK_COOLDOWN=3e5,this.setupEventListeners()}}let l=null,u=()=>(l||(l=new c),l);var d=s(3081);let h=(0,a.createContext)(void 0);function k(t){let{children:e}=t,[s,c]=(0,a.useState)(null),[l,k]=(0,a.useState)(!0),_=(0,n.useRouter)();(0,a.useEffect)(()=>{(async()=>{k(!0);try{let t=localStorage.getItem("user"),e=localStorage.getItem("access_token");if(t&&e){if(console.log("AuthContext：检查token有效性..."),await (0,i.sT)())console.log("AuthContext：Token有效，设置用户信息"),c(JSON.parse(t)),u().start();else{console.log("AuthContext：Token无效，跳转到登录页面"),(0,r.Ee)();return}}else{console.log("AuthContext：未找到用户信息或token，跳转到登录页面"),_.push("/login");return}}catch(t){console.error("AuthContext：检查用户信息失败:",t),(0,r.Ee)();return}finally{k(!1)}})()},[_]);let y=async(t,e)=>{k(!0);try{let s=await fetch("".concat(d.CT,"/login"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:t,password:e})});if(!s.ok)throw Error("登录失败");let o=await s.json();if("success"===o.status&&o.data){let{user_info:t,access_token:e}=o.data,s={username:t.username,dcc_user:t.dcc_user};localStorage.setItem("user",JSON.stringify(s)),localStorage.setItem("access_token",e),document.cookie="user=".concat(JSON.stringify({username:t.username}),"; path=/; max-age=86400; samesite=lax"),document.cookie="access_token=".concat(e,"; path=/; max-age=86400; samesite=lax"),t.dcc_user||sessionStorage.setItem("needBindDcc","true"),c(s),u().start(),_.push("/")}else throw Error(o.message||"登录失败")}catch(t){if(t instanceof Error)throw t;throw Error("登录失败")}finally{k(!1)}};return(0,o.jsx)(h.Provider,{value:{user:s,login:y,logout:()=>{console.log("AuthContext：用户登出"),u().stopMonitoring(),localStorage.removeItem("user"),localStorage.removeItem("access_token"),document.cookie="user=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT",document.cookie="access_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT",c(null),_.push("/login")},loading:l},children:e})}function _(){let t=(0,a.useContext)(h);if(void 0===t)throw Error("useAuth must be used within an AuthProvider");return t}},8223:function(t,e,s){s.d(e,{F:function(){return k},LM:function(){return d},Md:function(){return h},sT:function(){return r}});var o=s(7342),a=s(3081);let n={token:null,isValid:!1,lastCheck:0,cacheDuration:3e5},i=()=>{let t=localStorage.getItem("access_token");return n.token=t,t},r=async()=>{let t=i();if(!t)return n.isValid=!1,!1;let e=Date.now();if(n.token===t&&n.isValid&&e-n.lastCheck<n.cacheDuration)return!0;try{let s=await fetch("".concat(a.CT,"/auth/verify"),{method:"GET",headers:{"Content-Type":"application/json","access-token":t}});if(s.ok){let t=await s.json(),o="success"===t.status;return n.isValid=o,n.lastCheck=e,o}return n.isValid=!1,n.lastCheck=e,!1}catch(t){return console.error("Token验证失败:",t),n.isValid=!1,n.lastCheck=e,!1}},c=async()=>{let t=i();if(!t)return!1;n.token!==t&&(n.isValid=!1,n.lastCheck=0);let e=Date.now();return!!n.isValid&&e-n.lastCheck<n.cacheDuration||await r()},l=()=>{n.isValid=!1,n.lastCheck=0},u=async function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},s=i();if(!s)throw console.log("未找到token，跳转到登录页面"),(0,o.Ee)(),Error("未登录，请先登录");let n=c(),r={"Content-Type":"application/json",...s&&{"access-token":s}},u={...e,headers:{...r,...e.headers}};try{let e=await fetch("".concat(a.CT).concat(t),u);if(401===e.status)throw console.log("收到401响应，token无效，跳转到登录页面"),l(),(0,o.Ee)(),Error("登录已过期，请重新登录");if(!e.ok)throw Error("API请求失败: ".concat(e.status));return n.then(t=>{t||l()}).catch(()=>{l()}),e.json()}catch(t){if(t instanceof TypeError&&(console.log("网络错误，检查token有效性"),!await n))throw l(),(0,o.Ee)(),Error("登录已过期，请重新登录");throw t}},d={getStatistics:async t=>u("/leads/statistics?filter_by=".concat(t)),getFilteredStatistics:async(t,e)=>u("/leads/statistics/filtered?filter_by=".concat(e),{method:"POST",body:JSON.stringify(t)}),getFilteredCount:async(t,e)=>{let s=new URLSearchParams;return e&&s.append("filter_by",e),t.leads_product&&s.append("leads_product",t.leads_product),t.leads_type&&s.append("leads_type",t.leads_type),t.first_follow_start&&s.append("first_follow_start",t.first_follow_start),t.first_follow_end&&s.append("first_follow_end",t.first_follow_end),t.latest_follow_start&&s.append("latest_follow_start",t.latest_follow_start),t.latest_follow_end&&s.append("latest_follow_end",t.latest_follow_end),t.next_follow_start&&s.append("next_follow_start",t.next_follow_start),t.next_follow_end&&s.append("next_follow_end",t.next_follow_end),t.first_arrive_start&&s.append("first_arrive_start",t.first_arrive_start),t.first_arrive_end&&s.append("first_arrive_end",t.first_arrive_end),void 0!==t.is_arrive&&s.append("is_arrive",t.is_arrive.toString()),u("/leads/statistics?".concat(s.toString()))}},h={getCallTasksList:async()=>u("/tasks"),getScriptTasksList:async()=>u("/tasks"),getCallTasksStatistics:async()=>u("/task-stats"),getCallTaskDetails:async t=>u("/call-tasks/list?task_id=".concat(t)),getTaskFollowupRecords:async t=>u("/task_followup_records/".concat(t)),createCallTask:async t=>u("/create-autoCall-tasks",{method:"POST",body:JSON.stringify(t)}),createTask:async t=>u("/tasks/create",{method:"POST",body:JSON.stringify(t)}),createOutboundCall:async t=>u("/create_outbound_call",{method:"POST",body:JSON.stringify(t)}),queryOutboundCall:async t=>u("/query_outbound_call",{method:"POST",body:JSON.stringify({job_ids:t})}),checkTaskStatus:async t=>u("/check_task_status/".concat(t)),getTaskStatusDetails:async t=>u("/task_status_details/".concat(t)),queryTaskExecution:async t=>u("/query-task-execution",{method:"POST",body:JSON.stringify({task_id:t})}),getTaskStatistics:async t=>u("/task-statistics",{method:"POST",body:JSON.stringify({task_id:t})}),getCompletedTasksList:async()=>u("/tasks"),batchCheckTaskStatus:async t=>u("/batch_check_task_status",{method:"POST",body:JSON.stringify({job_ids:t})}),updateTaskScriptId:async(t,e)=>u("/update-script-id",{method:"POST",body:JSON.stringify({task_id:t,script_id:e})}),startCallTask:async t=>u("/start-call-task",{method:"POST",body:JSON.stringify({task_id:t})}),suspendResumeTask:async(t,e)=>u("/suspend-resume-task",{method:"POST",body:JSON.stringify({action:e,task_id:t})})},k={getScenes:async()=>u("/scenes"),getSceneDetails:async t=>u("/scenes/".concat(t)),createScene:async t=>u("/create_scene",{method:"POST",body:JSON.stringify(t)})}},7342:function(t,e,s){s.d(e,{Ee:function(){return a},MI:function(){return i}});var o=s(8223);let a=()=>{console.log("Token已失效，正在跳转到登录页面..."),localStorage.removeItem("access_token"),localStorage.removeItem("user"),document.cookie="user=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT",document.cookie="access_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT",window.location.href="/login"},n=async()=>{try{if(!localStorage.getItem("access_token"))return console.log("未找到token"),!1;if(console.log("验证token有效性..."),!await (0,o.sT)())return console.log("Token验证失败"),a(),!1;return console.log("Token验证成功"),!0}catch(t){return console.error("Token验证过程中发生错误:",t),a(),!1}},i=()=>{let t=async()=>{"visible"===document.visibilityState&&(console.log("页面变为可见，检查token有效性"),await n())};return document.addEventListener("visibilitychange",t),()=>{document.removeEventListener("visibilitychange",t)}}}}]);
name: DCC数字员工系统 - 自动部署

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Node.js环境
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: dcc-digital-employee/package-lock.json
        
    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 安装前端依赖
      working-directory: ./dcc-digital-employee
      run: |
        npm config set registry https://registry.npmmirror.com
        npm ci
        
    - name: 构建前端
      working-directory: ./dcc-digital-employee
      run: npm run build
      
    - name: 安装后端依赖
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 运行测试
      run: |
        # 前端测试
        cd dcc-digital-employee
        npm run lint
        cd ..
        
        # 后端测试（如果有的话）
        cd backend
        python -m pytest tests/ || echo "No tests found"
        cd ..
        
    - name: 部署到服务器
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # 进入项目目录
          cd /path/to/your/project
          
          # 拉取最新代码
          git pull origin main
          
          # 重启后端服务
          ./restart-backend.sh
          
          # 重启前端服务
          ./restart-frontend.sh
          
          # 检查服务状态
          sleep 10
          curl -f http://localhost:8000/api/health || exit 1
          curl -f http://localhost:3001 || exit 1
          
          echo "部署完成！"